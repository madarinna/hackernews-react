{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getAskStoryIds, getBestStoryIds, getJobStoryIds, getNewStoryIds, getShowStoryIds, getTopStoryIds } from \"../services/hnApi\";\nimport Story from \"../components/Story\";\nimport AskStory from \"../components/AskStory\";\nimport { GlobalStyle, StoriesContainerWrapper } from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nimport { StoryWrapper, StoryTitle, StoryMeta } from \"../styles\";\nimport { TextBlock, RectShape, TextRow } from \"react-placeholder/lib/placeholders\";\nimport ReactPlaceholder from \"react-placeholder\";\n\nconst GhostPlaceholder = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"my-placeholder\",\n  style: {\n    marginTop: \"100px\"\n  },\n  children: /*#__PURE__*/_jsxDEV(StoryWrapper, {\n    \"data-testid\": \"story\",\n    children: [/*#__PURE__*/_jsxDEV(StoryTitle, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: story.url,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: story.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoryMeta, {\n      children: [/*#__PURE__*/_jsxDEV(TextRow, {\n        rows: 6,\n        color: \"rgba(242, 242, 242, 1)\",\n        style: {\n          width: \"400px\",\n          padding: \"0px, 15px\",\n          marginLeft: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextRow, {\n        rows: 6,\n        color: \"rgba(242, 242, 242, 1)\",\n        style: {\n          width: \"300px\",\n          padding: \"0px, 20px\",\n          marginLeft: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          borderTop: \"1px solid #cccccc\",\n          marginLeft: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextRow, {\n        rows: 6,\n        color: \"rgba(242, 242, 242, 1)\",\n        style: {\n          width: \"400px\",\n          padding: \"0px, 15px\",\n          marginLeft: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextRow, {\n        rows: 6,\n        color: \"rgba(242, 242, 242, 1)\",\n        style: {\n          width: \"300px\",\n          padding: \"0px, 20px\",\n          marginLeft: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          borderTop: \"1px solid #cccccc\",\n          marginLeft: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextRow, {\n        rows: 6,\n        color: \"rgba(242, 242, 242, 1)\",\n        style: {\n          width: \"400px\",\n          padding: \"0px, 15px\",\n          marginLeft: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextRow, {\n        rows: 6,\n        color: \"rgba(242, 242, 242, 1)\",\n        style: {\n          width: \"300px\",\n          padding: \"0px, 20px\",\n          marginLeft: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          borderTop: \"1px solid #cccccc\",\n          marginLeft: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 2\n}, this);\n\n_c = GhostPlaceholder;\nexport const NewStoriesContainer = () => {\n  _s();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getNewStoryIds().then(data => setStoryIds(data));\n  }, []); // if (storyIds.length == 0) {\n  // \treturn (\n  // \t\t<div style={{ marginTop: \"50px\" }}>\n  // \t\t\t&nbsp;\n  // \t\t\t<div>Looading...</div>\n  // \t\t</div>\n  // \t);\n  // } else {\n\n  return /*#__PURE__*/_jsxDEV(ReactPlaceholder, {\n    ready: storyIds.length > 0,\n    customPlaceholder: /*#__PURE__*/_jsxDEV(GhostPlaceholder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n        \"data-test-id\": \"stories-container\",\n        children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n          storyId: storyId\n        }, storyId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this); // }\n};\n\n_s(NewStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c2 = NewStoriesContainer;\nexport const TopStoriesContainer = () => {\n  _s2();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getTopStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(TopStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c3 = TopStoriesContainer;\nexport const BestStoriesContainer = () => {\n  _s3();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getBestStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(BestStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c4 = BestStoriesContainer;\nexport const AskStoriesContainer = () => {\n  _s4();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getAskStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(AskStory, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s4(AskStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c5 = AskStoriesContainer;\nexport const ShowStoriesContainer = () => {\n  _s5();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getShowStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s5(ShowStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c6 = ShowStoriesContainer;\nexport const JobStoriesContainer = () => {\n  _s6();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getJobStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s6(JobStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c7 = JobStoriesContainer;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"GhostPlaceholder\");\n$RefreshReg$(_c2, \"NewStoriesContainer\");\n$RefreshReg$(_c3, \"TopStoriesContainer\");\n$RefreshReg$(_c4, \"BestStoriesContainer\");\n$RefreshReg$(_c5, \"AskStoriesContainer\");\n$RefreshReg$(_c6, \"ShowStoriesContainer\");\n$RefreshReg$(_c7, \"JobStoriesContainer\");","map":{"version":3,"sources":["/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js"],"names":["React","useEffect","useState","getAskStoryIds","getBestStoryIds","getJobStoryIds","getNewStoryIds","getShowStoryIds","getTopStoryIds","Story","AskStory","GlobalStyle","StoriesContainerWrapper","useInfiniteScroll","StoryWrapper","StoryTitle","StoryMeta","TextBlock","RectShape","TextRow","ReactPlaceholder","GhostPlaceholder","marginTop","story","url","title","width","padding","marginLeft","borderTop","NewStoriesContainer","count","storyIds","setStoryIds","then","data","length","slice","map","storyId","TopStoriesContainer","BestStoriesContainer","AskStoriesContainer","ShowStoriesContainer","JobStoriesContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n\tgetAskStoryIds,\n\tgetBestStoryIds,\n\tgetJobStoryIds,\n\tgetNewStoryIds,\n\tgetShowStoryIds,\n\tgetTopStoryIds,\n} from \"../services/hnApi\";\nimport Story from \"../components/Story\";\nimport AskStory from \"../components/AskStory\";\nimport {\n\tGlobalStyle,\n\tStoriesContainerWrapper,\n} from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nimport {StoryWrapper, StoryTitle,StoryMeta} from \"../styles\"\nimport {\n\tTextBlock,\n\tRectShape,\n\tTextRow,\n} from \"react-placeholder/lib/placeholders\";\nimport ReactPlaceholder from \"react-placeholder\";\n\nconst GhostPlaceholder = () => (\n\t<div\n\t\tclassName=\"my-placeholder\"\n\t\tstyle={{\n\t\t\tmarginTop: \"100px\",\n\t\t}}\n\t>\n\t\t{/* <RectShape color=\"gray\" style={{ width: 25, height: 70 }} /> */}\n\t\t<StoryWrapper data-testid=\"story\">\n\t\t\t<StoryTitle>\n\t\t\t\t<a href={story.url}>\n\t\t\t\t\t<p>{story.title}</p>\n\t\t\t\t</a>\n\t\t\t</StoryTitle>\n\t\t\t<StoryMeta>\n\t\t\t\t<TextRow\n\t\t\t\t\trows={6}\n\t\t\t\t\tcolor=\"rgba(242, 242, 242, 1)\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: \"400px\",\n\t\t\t\t\t\tpadding: \"0px, 15px\",\n\t\t\t\t\t\tmarginLeft: \"80px\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TextRow\n\t\t\t\t\trows={6}\n\t\t\t\t\tcolor=\"rgba(242, 242, 242, 1)\"\n\t\t\t\t\tstyle={{ width: \"300px\", padding: \"0px, 20px\", marginLeft: \"80px\" }}\n\t\t\t\t/>\n\t\t\t\t<hr style={{ borderTop: \"1px solid #cccccc\", marginLeft: \"80px\" }} />\n\n\t\t\t\t<TextRow\n\t\t\t\t\trows={6}\n\t\t\t\t\tcolor=\"rgba(242, 242, 242, 1)\"\n\t\t\t\t\tstyle={{ width: \"400px\", padding: \"0px, 15px\", marginLeft: \"80px\" }}\n\t\t\t\t/>\n\t\t\t\t<TextRow\n\t\t\t\t\trows={6}\n\t\t\t\t\tcolor=\"rgba(242, 242, 242, 1)\"\n\t\t\t\t\tstyle={{ width: \"300px\", padding: \"0px, 20px\", marginLeft: \"80px\" }}\n\t\t\t\t/>\n\t\t\t\t<hr style={{ borderTop: \"1px solid #cccccc\", marginLeft: \"80px\" }} />\n\n\t\t\t\t<TextRow\n\t\t\t\t\trows={6}\n\t\t\t\t\tcolor=\"rgba(242, 242, 242, 1)\"\n\t\t\t\t\tstyle={{ width: \"400px\", padding: \"0px, 15px\", marginLeft: \"80px\" }}\n\t\t\t\t/>\n\t\t\t\t<TextRow\n\t\t\t\t\trows={6}\n\t\t\t\t\tcolor=\"rgba(242, 242, 242, 1)\"\n\t\t\t\t\tstyle={{ width: \"300px\", padding: \"0px, 20px\", marginLeft: \"80px\" }}\n\t\t\t\t/>\n\t\t\t\t<hr style={{ borderTop: \"1px solid #cccccc\", marginLeft: \"80px\" }} />\n\t\t\t</StoryMeta>\n\t\t</StoryWrapper>\n\t</div>\n);\n\nexport const NewStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetNewStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\t// if (storyIds.length == 0) {\n\t// \treturn (\n\t// \t\t<div style={{ marginTop: \"50px\" }}>\n\t// \t\t\t&nbsp;\n\t// \t\t\t<div>Looading...</div>\n\t// \t\t</div>\n\t// \t);\n\t// } else {\n\treturn (\n\t\t<ReactPlaceholder\n\t\t\tready={storyIds.length > 0}\n\t\t\tcustomPlaceholder={<GhostPlaceholder />}\n\t\t>\n\t\t\t<>\n\t\t\t\t<GlobalStyle />\n\t\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t\t))}\n\t\t\t\t</StoriesContainerWrapper>\n\t\t\t</>\n\t\t</ReactPlaceholder>\n\t);\n\t// }\n};\n\nexport const TopStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetTopStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const BestStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetBestStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const AskStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetAskStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<AskStory key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const ShowStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetShowStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const JobStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetJobStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}