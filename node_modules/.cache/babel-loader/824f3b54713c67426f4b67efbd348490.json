{"ast":null,"code":"import _slicedToArray from\"/Users/nurulputri/Documents/GitHub/FE-2/hackernews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";/* eslint-disable react-hooks/exhaustive-deps */import React,{useEffect,useState,memo}from\"react\";import{mapTime,check1,check2}from\"../mappers/mapTime\";import{getStory}from\"../services/hnApi\";import{StoryMeta,StoryMetaElement,StoryTitle,StoryWrapper}from\"../styles/StoryStyles\";import{HashLink as Link}from\"react-router-hash-link\";var Submission=/*#__PURE__*/memo(function Submission(_ref){var submissionId=_ref.submissionId;var _useState=useState(),_useState2=_slicedToArray(_useState,2),story=_useState2[0],setStory=_useState2[1];useEffect(function(){getStory(submissionId).then(function(data){data&&data.url&&setStory(data);});},[]);return story&&story.title?/*#__PURE__*/_jsxs(StoryWrapper,{\"data-testid\":\"story\",children:[/*#__PURE__*/_jsx(StoryTitle,{children:/*#__PURE__*/_jsx(\"a\",{href:story.url,children:/*#__PURE__*/_jsx(\"p\",{children:story.title})})}),/*#__PURE__*/_jsxs(StoryMeta,{children:[/*#__PURE__*/_jsxs(\"span\",{\"data-testid\":\"story-score\",children:[/*#__PURE__*/_jsx(StoryMetaElement,{color:\"#000\",children:\"Points: \"}),story.score]}),/*#__PURE__*/_jsxs(\"span\",{\"data-testid\":\"story-time\",children:[/*#__PURE__*/_jsx(StoryMetaElement,{color:\"#000\",children:\"Posted: \"}),mapTime(story.time),\" ago \\xA0\"]}),/*#__PURE__*/_jsx(Link,{to:\"/comments/\".concat(story.id),children:/*#__PURE__*/_jsxs(\"span\",{\"data-testid\":\"story-comments\",children:[/*#__PURE__*/_jsx(StoryMetaElement,{color:\"#000\",children:check1(story.kids)}),check2(story.kids)]})})]})]}):/*#__PURE__*/_jsx(_Fragment,{});});export default Submission;","map":{"version":3,"sources":["/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/components/Submission.js"],"names":["React","useEffect","useState","memo","mapTime","check1","check2","getStory","StoryMeta","StoryMetaElement","StoryTitle","StoryWrapper","HashLink","Link","Submission","submissionId","story","setStory","then","data","url","title","score","time","id","kids"],"mappings":"sTAAA,gDACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,IAArC,KAAiD,OAAjD,CACA,OAASC,OAAT,CAAkBC,MAAlB,CAA0BC,MAA1B,KAAwC,oBAAxC,CACA,OAASC,QAAT,KAAyB,mBAAzB,CACA,OACCC,SADD,CAECC,gBAFD,CAGCC,UAHD,CAICC,YAJD,KAKO,uBALP,CAMA,OAASC,QAAQ,GAAIC,CAAAA,IAArB,KAAiC,wBAAjC,CAEA,GAAMC,CAAAA,UAAU,cAAGX,IAAI,CAAC,QAASW,CAAAA,UAAT,MAAsC,IAAhBC,CAAAA,YAAgB,MAAhBA,YAAgB,eACnCb,QAAQ,EAD2B,wCACtDc,KADsD,eAC/CC,QAD+C,eAG7DhB,SAAS,CAAC,UAAM,CACfM,QAAQ,CAACQ,YAAD,CAAR,CAAuBG,IAAvB,CAA4B,SAACC,IAAD,CAAU,CACrCA,IAAI,EAAIA,IAAI,CAACC,GAAb,EAAoBH,QAAQ,CAACE,IAAD,CAA5B,CACA,CAFD,EAGA,CAJQ,CAIN,EAJM,CAAT,CAMA,MAAOH,CAAAA,KAAK,EAAIA,KAAK,CAACK,KAAf,cACN,MAAC,YAAD,EAAc,cAAY,OAA1B,wBACC,KAAC,UAAD,wBACC,UAAG,IAAI,CAAEL,KAAK,CAACI,GAAf,uBACC,mBAAIJ,KAAK,CAACK,KAAV,EADD,EADD,EADD,cAMC,MAAC,SAAD,yBACC,cAAM,cAAY,aAAlB,wBACC,KAAC,gBAAD,EAAkB,KAAK,CAAC,MAAxB,sBADD,CAEEL,KAAK,CAACM,KAFR,GADD,cAKC,cAAM,cAAY,YAAlB,wBACC,KAAC,gBAAD,EAAkB,KAAK,CAAC,MAAxB,sBADD,CAEElB,OAAO,CAACY,KAAK,CAACO,IAAP,CAFT,eALD,cASC,KAAC,IAAD,EAAM,EAAE,qBAAeP,KAAK,CAACQ,EAArB,CAAR,uBACC,cAAM,cAAY,gBAAlB,wBACC,KAAC,gBAAD,EAAkB,KAAK,CAAC,MAAxB,UAAgCnB,MAAM,CAACW,KAAK,CAACS,IAAP,CAAtC,EADD,CAEEnB,MAAM,CAACU,KAAK,CAACS,IAAP,CAFR,GADD,EATD,GAND,GADM,cAyBN,kBAzBD,CA2BA,CApCsB,CAAvB,CAqCA,cAAeX,CAAAA,UAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, memo } from \"react\";\nimport { mapTime, check1, check2 } from \"../mappers/mapTime\";\nimport { getStory } from \"../services/hnApi\";\nimport {\n\tStoryMeta,\n\tStoryMetaElement,\n\tStoryTitle,\n\tStoryWrapper,\n} from \"../styles/StoryStyles\";\nimport { HashLink as Link } from \"react-router-hash-link\";\n\nconst Submission = memo(function Submission({ submissionId }) {\n\tconst [story, setStory] = useState();\n\n\tuseEffect(() => {\n\t\tgetStory(submissionId).then((data) => {\n\t\t\tdata && data.url && setStory(data);\n\t\t});\n\t}, []);\n\n\treturn story && story.title ? (\n\t\t<StoryWrapper data-testid=\"story\">\n\t\t\t<StoryTitle>\n\t\t\t\t<a href={story.url}>\n\t\t\t\t\t<p>{story.title}</p>\n\t\t\t\t</a>\n\t\t\t</StoryTitle>\n\t\t\t<StoryMeta>\n\t\t\t\t<span data-testid=\"story-score\">\n\t\t\t\t\t<StoryMetaElement color=\"#000\">Points: </StoryMetaElement>\n\t\t\t\t\t{story.score}\n\t\t\t\t</span>\n\t\t\t\t<span data-testid=\"story-time\">\n\t\t\t\t\t<StoryMetaElement color=\"#000\">Posted: </StoryMetaElement>\n\t\t\t\t\t{mapTime(story.time)} ago &nbsp;\n\t\t\t\t</span>\n\t\t\t\t<Link to={`/comments/${story.id}`}>\n\t\t\t\t\t<span data-testid=\"story-comments\">\n\t\t\t\t\t\t<StoryMetaElement color=\"#000\">{check1(story.kids)}</StoryMetaElement>\n\t\t\t\t\t\t{check2(story.kids)}\n\t\t\t\t\t</span>\n\t\t\t\t</Link>\n\t\t\t</StoryMeta>\n\t\t</StoryWrapper>\n\t) : (\n\t\t<></>\n\t);\n});\nexport default Submission;\n"]},"metadata":{},"sourceType":"module"}