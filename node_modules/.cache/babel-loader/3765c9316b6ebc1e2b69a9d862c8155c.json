{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/CommentContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getCommentIds } from \"../services/hnApi\";\nimport Comment from \"../components/Comment\";\nimport { GlobalStyle, StoriesContainerWrapper } from \"../styles/StoriesContainerStyles\";\nimport { StoryTitle } from \"../styles/StoryStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nexport const CommentContainer = ({\n  storyId\n}) => {\n  _s();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [commentIds, setCommentIds] = useState([]);\n  useEffect(() => {\n    getCommentIds(storyId).then(data => setCommentIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoryTitle, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: commentIds.url,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: commentIds.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: commentIds.kids.slice(0, count).map(commentId => /*#__PURE__*/_jsxDEV(Comment, {\n        commentId: commentId\n      }, commentId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CommentContainer, \"sK7Q6T4FD+PusOBdGzhEWZP6fd4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = CommentContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentContainer\");","map":{"version":3,"sources":["/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/CommentContainer.js"],"names":["React","useEffect","useState","getCommentIds","Comment","GlobalStyle","StoriesContainerWrapper","StoryTitle","useInfiniteScroll","CommentContainer","storyId","count","commentIds","setCommentIds","then","data","url","title","kids","slice","map","commentId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SACCC,WADD,EAECC,uBAFD,QAGO,kCAHP;AAIA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAYH,iBAAiB,EAAnC;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,aAAa,CAACO,OAAD,CAAb,CAAuBI,IAAvB,CAA6BC,IAAD,IAAUF,aAAa,CAACE,IAAD,CAAnD;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,4BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,UAAD;AAAA,6BACC;AAAG,QAAA,IAAI,EAAEH,UAAU,CAACI,GAApB;AAAA,+BACC;AAAA,oBAAIJ,UAAU,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFD,eAOC,QAAC,uBAAD;AAAyB,sBAAa,mBAAtC;AAAA,gBACEL,UAAU,CAACM,IAAX,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBR,KAAzB,EAAgCS,GAAhC,CAAqCC,SAAD,iBACpC,QAAC,OAAD;AAAyB,QAAA,SAAS,EAAEA;AAApC,SAAcA,SAAd;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA,kBADD;AAeA,CAvBM;;GAAMZ,gB;UACMD,iB;;;KADNC,gB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getCommentIds } from \"../services/hnApi\";\nimport Comment from \"../components/Comment\";\nimport {\n\tGlobalStyle,\n\tStoriesContainerWrapper,\n} from \"../styles/StoriesContainerStyles\";\nimport { StoryTitle } from \"../styles/StoryStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\n\nexport const CommentContainer = ({ storyId }) => {\n\tconst { count } = useInfiniteScroll();\n\tconst [commentIds, setCommentIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetCommentIds(storyId).then((data) => setCommentIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoryTitle>\n\t\t\t\t<a href={commentIds.url}>\n\t\t\t\t\t<p>{commentIds.title}</p>\n\t\t\t\t</a>\n\t\t\t</StoryTitle>\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t{commentIds.kids.slice(0, count).map((commentId) => (\n\t\t\t\t\t<Comment key={commentId} commentId={commentId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}