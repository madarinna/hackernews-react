{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Inna/Documents/GitHub/FE-2/hackernews/src/components/Comment.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, memo } from \"react\";\nimport { mapTime } from \"../mappers/mapTime\";\nimport { clean } from \"../mappers/mapTime\";\nimport { getComment } from \"../services/hnApi\";\nimport { StoryMeta, StoryMetaElement, StoryWrapper } from \"../styles/StoryStyles\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nconst Comment = /*#__PURE__*/memo(_c = _s(function Comment({\n  commentId\n}) {\n  _s();\n\n  const [comment, setComment] = useState();\n  useEffect(() => {\n    getComment(commentId).then(data => {\n      data && data.text && setComment(data);\n    });\n  }, []);\n  return comment && comment.text ? /*#__PURE__*/_jsxDEV(StoryWrapper, {\n    \"data-testid\": \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      crossOrigin: true,\n      src: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoryMeta, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: comment.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/user/${comment.by}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"comment-by\",\n          children: [/*#__PURE__*/_jsxDEV(StoryMetaElement, {\n            color: \"#000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 8\n          }, this), \" \", comment.by]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-testid\": \"comment-time\",\n        children: [/*#__PURE__*/_jsxDEV(StoryMetaElement, {\n          color: \"#000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), \" \", mapTime(comment.time), \" ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"comment-text\",\n        children: [/*#__PURE__*/_jsxDEV(StoryMetaElement, {\n          color: \"#000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this), \" \", clean(comment.text)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}, \"5pusk5dt4X76JjLcFF8t2MgWgIU=\"));\n_c2 = Comment;\nexport default Comment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Comment$memo\");\n$RefreshReg$(_c2, \"Comment\");","map":{"version":3,"sources":["/Users/Inna/Documents/GitHub/FE-2/hackernews/src/components/Comment.js"],"names":["React","useEffect","useState","memo","mapTime","clean","getComment","StoryMeta","StoryMetaElement","StoryWrapper","HashLink","Link","Comment","commentId","comment","setComment","then","data","text","marginTop","title","by","time"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SACCC,SADD,EAECC,gBAFD,EAGCC,YAHD,QAIO,uBAJP;AAKA,SAASC,QAAQ,IAAIC,IAArB,QAAiC,wBAAjC;AAEA,MAAMC,OAAO,gBAAGT,IAAI,SAAC,SAASS,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAgC;AAAA;;AACpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfK,IAAAA,UAAU,CAACO,SAAD,CAAV,CAAsBG,IAAtB,CAA4BC,IAAD,IAAU;AACpCA,MAAAA,IAAI,IAAIA,IAAI,CAACC,IAAb,IAAqBH,UAAU,CAACE,IAAD,CAA/B;AACA,KAFD;AAGA,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOH,OAAO,IAAIA,OAAO,CAACI,IAAnB,gBACN,QAAC,YAAD;AAAc,mBAAY,SAA1B;AAAA,4BACC;AAAQ,MAAA,WAAW,MAAnB;AAAoB,MAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADD,eAEE,QAAC,SAAD;AAAA,8BACC;AAAA,+BACA;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA,oBAAmCL,OAAO,CAACM;AAA3C;AAAA;AAAA;AAAA;AAAA;AADA,uBADD,eAIC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,SAAQN,OAAO,CAACO,EAAG,EAA9B;AAAA,+BACC;AAAM,yBAAY,YAAlB;AAAA,kCACC,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADD,OACqDP,OAAO,CAACO,EAD7D;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAJD,eASC;AAAM,uBAAY,cAAlB;AAAA,gCACC,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADD,OAEEjB,OAAO,CAACU,OAAO,CAACQ,IAAT,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,cATD,eAaC;AAAK,uBAAY,cAAjB;AAAA,gCACC,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADD,EACoD,GADpD,EAEEjB,KAAK,CAACS,OAAO,CAACI,IAAT,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADM,gBAuBN,qCAvBD;AAyBA,CAlCmB,kCAApB;MAAMN,O;AAmCN,eAAeA,OAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, memo } from \"react\";\nimport { mapTime } from \"../mappers/mapTime\";\nimport { clean } from \"../mappers/mapTime\";\nimport { getComment } from \"../services/hnApi\";\nimport {\n\tStoryMeta,\n\tStoryMetaElement,\n\tStoryWrapper,\n} from \"../styles/StoryStyles\";\nimport { HashLink as Link } from \"react-router-hash-link\";\n\nconst Comment = memo(function Comment({ commentId }) {\n\tconst [comment, setComment] = useState();\n\n\tuseEffect(() => {\n\t\tgetComment(commentId).then((data) => {\n\t\t\tdata && data.text && setComment(data);\n\t\t});\n\t}, []);\n\n\treturn comment && comment.text ? (\n\t\t<StoryWrapper data-testid=\"comment\">\n\t\t\t<script crossOrigin src=\"...\"></script>\n\t\t\t\t<StoryMeta>\n\t\t\t\t\t<>\n\t\t\t\t\t<h1 style={{ marginTop: \"10px\" }}>{comment.title}</h1>\n\t\t\t\t\t</>\n\t\t\t\t\t<Link to={`/user/${comment.by}`}>\n\t\t\t\t\t\t<span data-testid=\"comment-by\">\n\t\t\t\t\t\t\t<StoryMetaElement color=\"#000\"></StoryMetaElement> {comment.by}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<span data-testid=\"comment-time\">\n\t\t\t\t\t\t<StoryMetaElement color=\"#000\"></StoryMetaElement> {}\n\t\t\t\t\t\t{mapTime(comment.time)} ago\n\t\t\t\t\t</span>\n\t\t\t\t\t<div data-testid=\"comment-text\">\n\t\t\t\t\t\t<StoryMetaElement color=\"#000\"></StoryMetaElement>{\" \"}\n\t\t\t\t\t\t{clean(comment.text)}\n\t\t\t\t\t</div>\n\t\t\t\t</StoryMeta>\n\t\t</StoryWrapper>\n\t) : (\n\t\t<></>\n\t);\n});\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}