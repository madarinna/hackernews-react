{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/containers/UserSubContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getSubmissionIds } from \"../services/hnApi\";\nimport Submission from \"../components/Submission\";\nimport { GlobalStyle, StoriesContainerWrapper } from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nexport const UserSubContainer = ({\n  userId\n}) => {\n  _s();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [submissionIds, setSubmissionIds] = useState([]);\n  useEffect(() => {\n    getSubmissionIds(userId).then(data => setSubmissionIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {},\n        children: [userId, \"'s Submissions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), submissionIds.slice(0, count).map(submissionId => /*#__PURE__*/_jsxDEV(Submission, {\n        submissionId: submissionId\n      }, submissionId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserSubContainer, \"qDKeyNX/hWjQs3SOZhDIOQ90x6c=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = UserSubContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSubContainer\");","map":{"version":3,"sources":["/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/containers/UserSubContainer.js"],"names":["React","useEffect","useState","getSubmissionIds","Submission","GlobalStyle","StoriesContainerWrapper","useInfiniteScroll","UserSubContainer","userId","count","submissionIds","setSubmissionIds","then","data","slice","map","submissionId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACCC,WADD,EAECC,uBAFD,QAGO,kCAHP;AAIA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAYH,iBAAiB,EAAnC;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,gBAAgB,CAACM,MAAD,CAAhB,CAAyBI,IAAzB,CAA+BC,IAAD,IAAUF,gBAAgB,CAACE,IAAD,CAAxD;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,4BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,uBAAD;AAAyB,sBAAa,mBAAtC;AAAA,sCAEC;AAAI,QAAA,KAAK,EAAE,EAAX;AAAA,mBAAgBL,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,EAGEE,aAAa,CAACI,KAAd,CAAoB,CAApB,EAAuBL,KAAvB,EAA8BM,GAA9B,CAAmCC,YAAD,iBAClC,QAAC,UAAD;AAA+B,QAAA,YAAY,EAAEA;AAA7C,SAAiBA,YAAjB;AAAA;AAAA;AAAA;AAAA,cADA,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAYA,CApBM;;GAAMT,gB;UACMD,iB;;;KADNC,gB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getSubmissionIds } from \"../services/hnApi\";\nimport Submission from \"../components/Submission\";\nimport {\n\tGlobalStyle,\n\tStoriesContainerWrapper,\n} from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\n\nexport const UserSubContainer = ({ userId }) => {\n\tconst { count } = useInfiniteScroll();\n\tconst [submissionIds, setSubmissionIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetSubmissionIds(userId).then((data) => setSubmissionIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t<h1 style={{}}>{userId}'s Submissions</h1>\n\t\t\t\t{submissionIds.slice(0, count).map((submissionId) => (\n\t\t\t\t\t<Submission key={submissionId} submissionId={submissionId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}