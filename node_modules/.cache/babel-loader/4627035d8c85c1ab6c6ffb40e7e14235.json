{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Inna/Documents/GitHub/FE-2/hackernews/src/components/Comment.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, memo } from \"react\";\nimport { check3, check2, mapTime } from \"../mappers/mapTime\";\nimport { clean } from \"../mappers/mapTime\";\nimport { getComment } from \"../services/hnApi\";\nimport { StoryMeta, StoryMetaElement, StoryWrapper } from \"../styles/StoryStyles\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport { Content } from \"antd/lib/layout/layout\";\nconst Comment = /*#__PURE__*/memo(_c = _s(function Comment({\n  commentId\n}) {\n  _s();\n\n  const [comment, setComment] = useState();\n  useEffect(() => {\n    getComment(commentId).then(data => {\n      data && data.text && setComment(data);\n    });\n  }, []);\n  return comment && comment.text ? /*#__PURE__*/_jsxDEV(StoryWrapper, {\n    \"data-testid\": \"comment\",\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        padding: \"0 50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(StoryMeta, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-testid\": \"comment-time\",\n            children: [mapTime(comment.time), \" ago \", ` `]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/user/${comment.by}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              \"data-testid\": \"comment-by\",\n              children: /*#__PURE__*/_jsxDEV(StoryMetaElement, {\n                color: \"#000\",\n                children: [\"by \", comment.by]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"comment-text\",\n          style: {\n            fontStyle: \"normal\"\n          },\n          children: clean(comment.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"comment-by\",\n          children: [check2(comment.kids), \" \", check3(comment.kids)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}, \"5pusk5dt4X76JjLcFF8t2MgWgIU=\"));\n_c2 = Comment;\nexport default Comment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Comment$memo\");\n$RefreshReg$(_c2, \"Comment\");","map":{"version":3,"sources":["/Users/Inna/Documents/GitHub/FE-2/hackernews/src/components/Comment.js"],"names":["React","useEffect","useState","memo","check3","check2","mapTime","clean","getComment","StoryMeta","StoryMetaElement","StoryWrapper","HashLink","Link","Content","Comment","commentId","comment","setComment","then","data","text","padding","time","by","fontStyle","kids"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,QAAwC,oBAAxC;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SACCC,SADD,EAECC,gBAFD,EAGCC,YAHD,QAIO,uBAJP;AAKA,SAASC,QAAQ,IAAIC,IAArB,QAAiC,wBAAjC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,MAAMC,OAAO,gBAAGZ,IAAI,SAAC,SAASY,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAgC;AAAA;;AACpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,UAAU,CAACQ,SAAD,CAAV,CAAsBG,IAAtB,CAA4BC,IAAD,IAAU;AACpCA,MAAAA,IAAI,IAAIA,IAAI,CAACC,IAAb,IAAqBH,UAAU,CAACE,IAAD,CAA/B;AACA,KAFD;AAGA,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOH,OAAO,IAAIA,OAAO,CAACI,IAAnB,gBACN,QAAC,YAAD;AAAc,mBAAY,SAA1B;AAAA,2BACC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAhB;AAAA,6BACC,QAAC,SAAD;AAAA,gCACC;AAAA,kCACC;AAAM,2BAAY,cAAlB;AAAA,uBACEhB,OAAO,CAACW,OAAO,CAACM,IAAT,CADT,WAC+B,GAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,SAAQN,OAAO,CAACO,EAAG,EAA9B;AAAA,mCACC;AAAM,6BAAY,YAAlB;AAAA,qCACC,QAAC,gBAAD;AAAkB,gBAAA,KAAK,EAAC,MAAxB;AAAA,kCACKP,OAAO,CAACO,EADb;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAaC;AAAG,yBAAY,cAAf;AAA8B,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAG;AAAb,WAArC;AAAA,oBACElB,KAAK,CAACU,OAAO,CAACI,IAAT;AADP;AAAA;AAAA;AAAA;AAAA,gBAbD,eAgBC;AAAG,yBAAY,YAAf;AAAA,qBACEhB,MAAM,CAACY,OAAO,CAACS,IAAT,CADR,OACyBtB,MAAM,CAACa,OAAO,CAACS,IAAT,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADM,gBA0BN,qCA1BD;AA4BA,CArCmB,kCAApB;MAAMX,O;AAsCN,eAAeA,OAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, memo } from \"react\";\nimport { check3, check2, mapTime } from \"../mappers/mapTime\";\nimport { clean } from \"../mappers/mapTime\";\nimport { getComment } from \"../services/hnApi\";\nimport {\n\tStoryMeta,\n\tStoryMetaElement,\n\tStoryWrapper,\n} from \"../styles/StoryStyles\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nconst Comment = memo(function Comment({ commentId }) {\n\tconst [comment, setComment] = useState();\n\n\tuseEffect(() => {\n\t\tgetComment(commentId).then((data) => {\n\t\t\tdata && data.text && setComment(data);\n\t\t});\n\t}, []);\n\n\treturn comment && comment.text ? (\n\t\t<StoryWrapper data-testid=\"comment\">\n\t\t\t<Content style={{ padding: \"0 50px\" }}>\n\t\t\t\t<StoryMeta>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<span data-testid=\"comment-time\">\n\t\t\t\t\t\t\t{mapTime(comment.time)} ago {` `}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<Link to={`/user/${comment.by}`}>\n\t\t\t\t\t\t\t<span data-testid=\"comment-by\">\n\t\t\t\t\t\t\t\t<StoryMetaElement color=\"#000\">\n\t\t\t\t\t\t\t\t\tby {comment.by}\n\t\t\t\t\t\t\t\t</StoryMetaElement>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p data-testid=\"comment-text\" style={{fontStyle : \"normal\"}}>\n\t\t\t\t\t\t{clean(comment.text)}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p data-testid=\"comment-by\">\n\t\t\t\t\t\t{check2(comment.kids)} {check3(comment.kids)}\n\t\t\t\t\t</p>\n\t\t\t\t</StoryMeta>\n\t\t\t</Content>\n\t\t</StoryWrapper>\n\t) : (\n\t\t<></>\n\t);\n});\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}