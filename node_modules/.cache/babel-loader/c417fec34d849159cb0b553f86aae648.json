{"ast":null,"code":"export var mapTime=function mapTime(timestamp){var seconds=Math.floor((new Date()-timestamp*1000)/1000);var interval=Math.floor(seconds/31536000);if(interval>1){return\"\".concat(interval,\" years\");}interval=Math.floor(seconds/2592000);if(interval>1){return\"\".concat(interval,\" months\");}interval=Math.floor(seconds/86400);if(interval>1){return\"\".concat(interval,\" days\");}interval=Math.floor(seconds/3600);if(interval>1){return\"\".concat(interval,\" hours\");}interval=Math.floor(seconds/60);if(interval>1){return\"\".concat(interval,\" minutes\");}return\"\".concat(Math.floor(seconds),\" seconds\");};export var check1=function check1(kids){if(kids){return\"Comments: \";}else{return\"\";}};export var check2=function check2(kids){if(kids){return kids.length;}else{return\"\";}};export var formatDate=function formatDate(date){var monthNames=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];date=new Date(date);var day=date.getDate();var monthIndex=date.getMonth();var year=date.getFullYear();return day+\" \"+monthNames[monthIndex]+\" \"+year;};export var clean=function clean(str){if(str){str=str.replace(/(&#x27;)/g,\"'\");str=str.replace(/(<p>)/g,\"\\n\");str=str.replace(/(<a[^>]*href=\")[^\"]*(\"[^>]*>)/g,\" \");str=str.replace(/(<\\/a>)/g,\"\");str=str.replace(/(&#x2F;)/g,\"/\");str=str.replace(/(&quot;)/g,'\"');str=str.replace(/(&amp;)/g,\"&\");str=str.replace(/(<\\/i>)/g,\" \");str=str.replace(/(<i>)/g,\" \");return str;}else return\"\";};","map":{"version":3,"sources":["/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/mappers/mapTime.js"],"names":["mapTime","timestamp","seconds","Math","floor","Date","interval","check1","kids","check2","length","formatDate","date","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","clean","str","replace"],"mappings":"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","sourcesContent":["export const mapTime = (timestamp) => {\n\tconst seconds = Math.floor((new Date() - timestamp * 1000) / 1000);\n\n\tlet interval = Math.floor(seconds / 31536000);\n\n\tif (interval > 1) {\n\t\treturn `${interval} years`;\n\t}\n\tinterval = Math.floor(seconds / 2592000);\n\n\tif (interval > 1) {\n\t\treturn `${interval} months`;\n\t}\n\tinterval = Math.floor(seconds / 86400);\n\n\tif (interval > 1) {\n\t\treturn `${interval} days`;\n\t}\n\tinterval = Math.floor(seconds / 3600);\n\n\tif (interval > 1) {\n\t\treturn `${interval} hours`;\n\t}\n\tinterval = Math.floor(seconds / 60);\n\n\tif (interval > 1) {\n\t\treturn `${interval} minutes`;\n\t}\n\n\treturn `${Math.floor(seconds)} seconds`;\n};\n\nexport const check1 = (kids) => {\n\tif (kids) {\n\t\treturn \"Comments: \"\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\nexport const check2 = (kids) => {\n\tif (kids) {\n\t\treturn kids.length;\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\nexport const formatDate = (date) => {\n\tvar monthNames = [\n\t\t\"January\",\n\t\t\"February\",\n\t\t\"March\",\n\t\t\"April\",\n\t\t\"May\",\n\t\t\"June\",\n\t\t\"July\",\n\t\t\"August\",\n\t\t\"September\",\n\t\t\"October\",\n\t\t\"November\",\n\t\t\"December\",\n\t];\n\tdate = new Date(date);\n\tvar day = date.getDate();\n\tvar monthIndex = date.getMonth();\n\tvar year = date.getFullYear();\n\n\treturn day + \" \" + monthNames[monthIndex] + \" \" + year;\n};\n\nexport const clean = (str) => {\n\tif (str) {\n\t\tstr = str.replace(/(&#x27;)/g, \"'\");\n\t\tstr = str.replace(/(<p>)/g, \"\\n\");\n\t\tstr = str.replace(/(<a[^>]*href=\")[^\"]*(\"[^>]*>)/g, \" \");\n\t\tstr = str.replace(/(<\\/a>)/g, \"\");\n\t\tstr = str.replace(/(&#x2F;)/g, \"/\");\n\t\tstr = str.replace(/(&quot;)/g, '\"');\n\t\tstr = str.replace(/(&amp;)/g, \"&\");\n\t\tstr = str.replace(/(<\\/i>)/g, \" \");\n\t\tstr = str.replace(/(<i>)/g, \" \");\n\t\treturn str;\n\t} else return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}