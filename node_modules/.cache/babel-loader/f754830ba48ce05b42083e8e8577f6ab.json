{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getAskStoryIds, getBestStoryIds, getJobStoryIds, getNewStoryIds, getShowStoryIds, getTopStoryIds } from \"../services/hnApi\";\nimport Story from \"../components/Story\";\nimport AskStory from \"../components/AskStory\";\nimport { GlobalStyle, StoriesContainerWrapper } from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nimport { TextBlock, RectShape, TextRow } from \"react-placeholder/lib/placeholders\";\nimport ReactPlaceholder from \"react-placeholder\";\n\nconst GhostPlaceholder = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"my-placeholder\",\n  style: {\n    marginTop: \"100px\"\n  },\n  children: [/*#__PURE__*/_jsxDEV(TextRow, {\n    rows: 6,\n    color: \"gray\",\n    style: {\n      width: \"400px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(TextRow, {\n    rows: 6,\n    color: \"gray\",\n    style: {\n      width: \"300px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(TextRow, {\n    rows: 6,\n    color: \"gray\",\n    style: {\n      width: \"400px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(TextRow, {\n    rows: 6,\n    color: \"gray\",\n    style: {\n      width: \"300px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(TextRow, {\n    rows: 6,\n    color: \"gray\",\n    style: {\n      width: \"400px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(TextRow, {\n    rows: 6,\n    color: \"gray\",\n    style: {\n      width: \"300px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 2\n}, this);\n\n_c = GhostPlaceholder;\nexport const NewStoriesContainer = () => {\n  _s();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getNewStoryIds().then(data => setStoryIds(data));\n  }, []); // if (storyIds.length == 0) {\n  // \treturn (\n  // \t\t<div style={{ marginTop: \"50px\" }}>\n  // \t\t\t&nbsp;\n  // \t\t\t<div>Looading...</div>\n  // \t\t</div>\n  // \t);\n  // } else {\n\n  return /*#__PURE__*/_jsxDEV(ReactPlaceholder, {\n    ready: storyIds.length > 0,\n    customPlaceholder: /*#__PURE__*/_jsxDEV(GhostPlaceholder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n        \"data-test-id\": \"stories-container\",\n        children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n          storyId: storyId\n        }, storyId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this); // }\n};\n\n_s(NewStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c2 = NewStoriesContainer;\nexport const TopStoriesContainer = () => {\n  _s2();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getTopStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(TopStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c3 = TopStoriesContainer;\nexport const BestStoriesContainer = () => {\n  _s3();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getBestStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(BestStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c4 = BestStoriesContainer;\nexport const AskStoriesContainer = () => {\n  _s4();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getAskStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(AskStory, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s4(AskStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c5 = AskStoriesContainer;\nexport const ShowStoriesContainer = () => {\n  _s5();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getShowStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s5(ShowStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c6 = ShowStoriesContainer;\nexport const JobStoriesContainer = () => {\n  _s6();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getJobStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [\"\\xA0\", storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s6(JobStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c7 = JobStoriesContainer;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"GhostPlaceholder\");\n$RefreshReg$(_c2, \"NewStoriesContainer\");\n$RefreshReg$(_c3, \"TopStoriesContainer\");\n$RefreshReg$(_c4, \"BestStoriesContainer\");\n$RefreshReg$(_c5, \"AskStoriesContainer\");\n$RefreshReg$(_c6, \"ShowStoriesContainer\");\n$RefreshReg$(_c7, \"JobStoriesContainer\");","map":{"version":3,"sources":["/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js"],"names":["React","useEffect","useState","getAskStoryIds","getBestStoryIds","getJobStoryIds","getNewStoryIds","getShowStoryIds","getTopStoryIds","Story","AskStory","GlobalStyle","StoriesContainerWrapper","useInfiniteScroll","TextBlock","RectShape","TextRow","ReactPlaceholder","GhostPlaceholder","marginTop","width","NewStoriesContainer","count","storyIds","setStoryIds","then","data","length","slice","map","storyId","TopStoriesContainer","BestStoriesContainer","AskStoriesContainer","ShowStoriesContainer","JobStoriesContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n\tgetAskStoryIds,\n\tgetBestStoryIds,\n\tgetJobStoryIds,\n\tgetNewStoryIds,\n\tgetShowStoryIds,\n\tgetTopStoryIds,\n} from \"../services/hnApi\";\nimport Story from \"../components/Story\";\nimport AskStory from \"../components/AskStory\";\nimport {\n\tGlobalStyle,\n\tStoriesContainerWrapper,\n} from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\n\nimport {\n\tTextBlock,\n\tRectShape,\n\tTextRow,\n} from \"react-placeholder/lib/placeholders\";\nimport ReactPlaceholder from \"react-placeholder\";\n\nconst GhostPlaceholder = () => (\n\t<div\n\t\tclassName=\"my-placeholder\"\n\t\tstyle={{\n\t\t\tmarginTop: \"100px\",\n\t\t}}\n\t>\n\t\t{/* <RectShape color=\"gray\" style={{ width: 25, height: 70 }} /> */}\n\n\t\t<TextRow rows={6} color=\"gray\" style={{ width: \"400px\" }} />\n\t\t<TextRow rows={6} color=\"gray\" style={{ width: \"300px\" }} />\n\n\t\t<TextRow rows={6} color=\"gray\" style={{ width: \"400px\" }} />\n\t\t<TextRow rows={6} color=\"gray\" style={{ width: \"300px\" }} />\n\n\t\t<TextRow rows={6} color=\"gray\" style={{ width: \"400px\" }} />\n\t\t<TextRow rows={6} color=\"gray\" style={{ width: \"300px\" }} />\n\t</div>\n);\n\nexport const NewStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetNewStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\t// if (storyIds.length == 0) {\n\t// \treturn (\n\t// \t\t<div style={{ marginTop: \"50px\" }}>\n\t// \t\t\t&nbsp;\n\t// \t\t\t<div>Looading...</div>\n\t// \t\t</div>\n\t// \t);\n\t// } else {\n\treturn (\n\t\t<ReactPlaceholder\n\t\t\tready={storyIds.length > 0}\n\t\t\tcustomPlaceholder={<GhostPlaceholder />}\n\t\t>\n\t\t\t<>\n\t\t\t\t<GlobalStyle />\n\t\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t\t))}\n\t\t\t\t</StoriesContainerWrapper>\n\t\t\t</>\n\t\t</ReactPlaceholder>\n\t);\n\t// }\n};\n\nexport const TopStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetTopStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const BestStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetBestStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const AskStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetAskStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<AskStory key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const ShowStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetShowStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const JobStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetJobStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t&nbsp;\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}