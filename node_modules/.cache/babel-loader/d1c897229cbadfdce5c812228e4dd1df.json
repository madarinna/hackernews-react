{"ast":null,"code":"export const mapTime = timestamp => {\n  const seconds = Math.floor((new Date() - timestamp * 1000) / 1000);\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return `${interval} years`;\n  }\n\n  interval = Math.floor(seconds / 2592000);\n\n  if (interval > 1) {\n    return `${interval} months`;\n  }\n\n  interval = Math.floor(seconds / 86400);\n\n  if (interval > 1) {\n    return `${interval} days`;\n  }\n\n  interval = Math.floor(seconds / 3600);\n\n  if (interval > 1) {\n    return `${interval} hours`;\n  }\n\n  interval = Math.floor(seconds / 60);\n\n  if (interval > 1) {\n    return `${interval} minutes`;\n  }\n\n  return `${Math.floor(seconds)} seconds`;\n};\nexport const check1 = kids => {\n  if (kids) {\n    return \"Comments: \";\n  } else {\n    return \"\";\n  }\n};\nexport const check2 = kids => {\n  if (kids) {\n    return kids.length;\n  } else {\n    return \"\";\n  }\n};\nexport const formatDate = date => {\n  var indexPie = Date.parse(date);\n  var date = new Date(indexPie);\n  var year = date.getUTCFullYear();\n  var month = date.getUTCMonth() + 1;\n  var day = date.getUTCDate();\n  var dateString = month + \" \" + day + \" \" + year;\n  return dateString;\n};\nexport const clean = str => {\n  if (str) {\n    str = str.replace(/(&#x27;)/g, \"'\");\n    str = str.replace(/(<p>)/g, \"\\n\");\n    str = str.replace(/(<a[^>]*href=\")[^\"]*(\"[^>]*>)/g, \" \");\n    str = str.replace(/(<\\/a>)/g, \"\");\n    str = str.replace(/(&#x2F;)/g, \"/\");\n    str = str.replace(/(&quot;)/g, '\"');\n    str = str.replace(/(&amp;)/g, \"&\");\n    str = str.replace(/(<\\/i>)/g, \" \");\n    str = str.replace(/(<i>)/g, \" \");\n    return str;\n  } else return \"\";\n};","map":{"version":3,"sources":["/Users/Inna/Documents/GitHub/FE-2/hackernews/src/mappers/mapTime.js"],"names":["mapTime","timestamp","seconds","Math","floor","Date","interval","check1","kids","check2","length","formatDate","date","indexPie","parse","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","dateString","clean","str","replace"],"mappings":"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","sourcesContent":["export const mapTime = (timestamp) => {\n\tconst seconds = Math.floor((new Date() - timestamp * 1000) / 1000);\n\n\tlet interval = Math.floor(seconds / 31536000);\n\n\tif (interval > 1) {\n\t\treturn `${interval} years`;\n\t}\n\tinterval = Math.floor(seconds / 2592000);\n\n\tif (interval > 1) {\n\t\treturn `${interval} months`;\n\t}\n\tinterval = Math.floor(seconds / 86400);\n\n\tif (interval > 1) {\n\t\treturn `${interval} days`;\n\t}\n\tinterval = Math.floor(seconds / 3600);\n\n\tif (interval > 1) {\n\t\treturn `${interval} hours`;\n\t}\n\tinterval = Math.floor(seconds / 60);\n\n\tif (interval > 1) {\n\t\treturn `${interval} minutes`;\n\t}\n\n\treturn `${Math.floor(seconds)} seconds`;\n};\n\nexport const check1 = (kids) => {\n\tif (kids) {\n\t\treturn \"Comments: \"\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\nexport const check2 = (kids) => {\n\tif (kids) {\n\t\treturn kids.length;\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\nexport const formatDate = (date) => {\n\tvar indexPie = Date.parse(date)\n\tvar date = new Date(indexPie);\n\tvar year = date.getUTCFullYear();\n\tvar month = date.getUTCMonth() + 1;\n\tvar day = date.getUTCDate();\n\tvar dateString = month + \" \" + day + \" \" + year;\n\treturn dateString;\n};\n\nexport const clean = (str) => {\n\tif (str) {\n\t\tstr = str.replace(/(&#x27;)/g, \"'\");\n\t\tstr = str.replace(/(<p>)/g, \"\\n\");\n\t\tstr = str.replace(/(<a[^>]*href=\")[^\"]*(\"[^>]*>)/g, \" \");\n\t\tstr = str.replace(/(<\\/a>)/g, \"\");\n\t\tstr = str.replace(/(&#x2F;)/g, \"/\");\n\t\tstr = str.replace(/(&quot;)/g, '\"');\n\t\tstr = str.replace(/(&amp;)/g, \"&\");\n\t\tstr = str.replace(/(<\\/i>)/g, \" \");\n\t\tstr = str.replace(/(<i>)/g, \" \");\n\t\treturn str;\n\t} else return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}