{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getNewStoryIds } from \"../services/hnApi\";\nimport Story from \"../components/Story\";\nimport { GlobalStyle, StoriesContainerWrapper } from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nexport const NewStoriesContainer = () => {\n  _s();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getNewStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = NewStoriesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewStoriesContainer\");","map":{"version":3,"sources":["/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js"],"names":["React","useEffect","useState","getNewStoryIds","Story","GlobalStyle","StoriesContainerWrapper","useInfiniteScroll","NewStoriesContainer","count","storyIds","setStoryIds","then","data","slice","map","storyId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SACCC,WADD,EAECC,uBAFD,QAGO,kCAHP;AAIA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAYF,iBAAiB,EAAnC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,cAAc,GAAGS,IAAjB,CAAuBC,IAAD,IAAUF,WAAW,CAACE,IAAD,CAA3C;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,4BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,uBAAD;AAAyB,sBAAa,mBAAtC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEEH,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkBL,KAAlB,EAAyBM,GAAzB,CAA8BC,OAAD,iBAC7B,QAAC,KAAD;AAAqB,QAAA,OAAO,EAAEA;AAA9B,SAAYA,OAAZ;AAAA;AAAA;AAAA;AAAA,cADA,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAWA,CAnBM;;GAAMR,mB;UACMD,iB;;;KADNC,mB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getNewStoryIds } from \"../services/hnApi\";\nimport Story from \"../components/Story\";\nimport {\n\tGlobalStyle,\n\tStoriesContainerWrapper,\n} from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\n\nexport const NewStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetNewStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t<h1>Hacker News Stories</h1>\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}