{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getAskStoryIds, getBestStoryIds, getJobStoryIds, getNewStoryIds, getShowStoryIds, getTopStoryIds } from \"../services/hnApi\";\nimport Story from \"../components/Story\";\nimport { GlobalStyle, StoriesContainerWrapper } from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nexport const NewStoriesContainer = () => {\n  _s();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getNewStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = NewStoriesContainer;\nexport const TopStoriesContainer = () => {\n  _s2();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getTopStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(TopStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c2 = TopStoriesContainer;\nexport const BestStoriesContainer = () => {\n  _s3();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getBestStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(BestStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c3 = BestStoriesContainer;\nexport const AskStoriesContainer = () => {\n  _s4();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getAskStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s4(AskStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c4 = AskStoriesContainer;\nexport const ShowStoriesContainer = () => {\n  _s5();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getShowStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s5(ShowStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c5 = ShowStoriesContainer;\nexport const JobStoriesContainer = () => {\n  _s6();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getJobStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s6(JobStoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c6 = JobStoriesContainer;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"NewStoriesContainer\");\n$RefreshReg$(_c2, \"TopStoriesContainer\");\n$RefreshReg$(_c3, \"BestStoriesContainer\");\n$RefreshReg$(_c4, \"AskStoriesContainer\");\n$RefreshReg$(_c5, \"ShowStoriesContainer\");\n$RefreshReg$(_c6, \"JobStoriesContainer\");","map":{"version":3,"sources":["/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js"],"names":["React","useEffect","useState","getAskStoryIds","getBestStoryIds","getJobStoryIds","getNewStoryIds","getShowStoryIds","getTopStoryIds","Story","GlobalStyle","StoriesContainerWrapper","useInfiniteScroll","NewStoriesContainer","count","storyIds","setStoryIds","then","data","slice","map","storyId","TopStoriesContainer","BestStoriesContainer","AskStoriesContainer","ShowStoriesContainer","JobStoriesContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAskStoryIds, getBestStoryIds, getJobStoryIds, getNewStoryIds, getShowStoryIds, getTopStoryIds } from \"../services/hnApi\";\nimport Story from \"../components/Story\";\nimport {\n\tGlobalStyle,\n\tStoriesContainerWrapper,\n} from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\n\nexport const NewStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetNewStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t<h1>Hacker News Stories</h1>\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const TopStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetTopStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t<h1>Hacker News Stories</h1>\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const BestStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetBestStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t<h1>Hacker News Stories</h1>\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const AskStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetAskStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t<h1>Hacker News Stories</h1>\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const ShowStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetShowStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t<h1>Hacker News Stories</h1>\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n\nexport const JobStoriesContainer = () => {\n\tconst { count } = useInfiniteScroll();\n\tconst [storyIds, setStoryIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetJobStoryIds().then((data) => setStoryIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t<h1>Hacker News Stories</h1>\n\t\t\t\t{storyIds.slice(0, count).map((storyId) => (\n\t\t\t\t\t<Story key={storyId} storyId={storyId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};"]},"metadata":{},"sourceType":"module"}