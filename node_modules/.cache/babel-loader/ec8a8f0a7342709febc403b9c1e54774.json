{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/CommentContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getCommentIds, getStory } from \"../services/hnApi\";\nimport Comment from \"../components/Comment\";\nimport { GlobalStyle, StoriesContainerWrapper } from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nimport { StoryTitle } from \"../styles/StoryStyles\";\nexport const CommentContainer = ({\n  storyId\n}) => {\n  _s();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [commentIds, setCommentIds] = useState([]);\n  const [story, setStory] = useState();\n  console.log(story);\n  useEffect(() => {\n    getStory(storyId).then(story => story && story.url && setStory(story));\n    getCommentIds(storyId).then(data => setCommentIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xA0\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(StoryTitle, {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: story.url,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: story.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginTop: \"10px\",\n          fontStyle: \"normal\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), commentIds.slice(0, count).map(commentId => /*#__PURE__*/_jsxDEV(Comment, {\n        commentId: commentId\n      }, commentId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CommentContainer, \"JN5PbVz/gC//TeKaBEd3P2WiTVg=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = CommentContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentContainer\");","map":{"version":3,"sources":["/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/CommentContainer.js"],"names":["React","useEffect","useState","getCommentIds","getStory","Comment","GlobalStyle","StoriesContainerWrapper","useInfiniteScroll","StoryTitle","CommentContainer","storyId","count","commentIds","setCommentIds","story","setStory","console","log","then","url","data","title","marginTop","fontStyle","slice","map","commentId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,mBAAxC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SACCC,WADD,EAECC,uBAFD,QAGO,kCAHP;AAIA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,iBAAiB,EAAnC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AAEAe,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,QAAQ,CAACO,OAAD,CAAR,CAAkBQ,IAAlB,CAAwBJ,KAAD,IAAWA,KAAK,IAAIA,KAAK,CAACK,GAAf,IAAsBJ,QAAQ,CAACD,KAAD,CAAhE;AACAZ,IAAAA,aAAa,CAACQ,OAAD,CAAb,CAAuBQ,IAAvB,CAA6BE,IAAD,IAAUP,aAAa,CAACO,IAAD,CAAnD;AACA,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACC;AAAA,4BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,uBAAD;AAAyB,sBAAa,mBAAtC;AAAA,8BACC;AAAA;AAAA,uBADD,eAEC,QAAC,UAAD;AAAA,+BACC;AAAG,UAAA,IAAI,EAAEN,KAAK,CAACK,GAAf;AAAA,iCACC;AAAA,sBAAIL,KAAK,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFD,eAOC;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,SAAS,EAAE;AAAhC,SAAX;AAAA,+BAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,cAPD,EAQEX,UAAU,CAACY,KAAX,CAAiB,CAAjB,EAAoBb,KAApB,EAA2Bc,GAA3B,CAAgCC,SAAD,iBAC/B,QAAC,OAAD;AAAyB,QAAA,SAAS,EAAEA;AAApC,SAAcA,SAAd;AAAA;AAAA;AAAA;AAAA,cADA,CARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAiBA,CA7BM;;GAAMjB,gB;UACMF,iB;;;KADNE,gB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getCommentIds, getStory } from \"../services/hnApi\";\nimport Comment from \"../components/Comment\";\nimport {\n\tGlobalStyle,\n\tStoriesContainerWrapper,\n} from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nimport { StoryTitle } from \"../styles/StoryStyles\";\n\nexport const CommentContainer = ({ storyId }) => {\n\tconst { count } = useInfiniteScroll();\n\tconst [commentIds, setCommentIds] = useState([]);\n\tconst [story, setStory] = useState();\n\n\tconsole.log(story);\n\n\tuseEffect(() => {\n\t\tgetStory(storyId).then((story) => story && story.url && setStory(story));\n\t\tgetCommentIds(storyId).then((data) => setCommentIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t<>&nbsp;</>\n\t\t\t\t<StoryTitle>\n\t\t\t\t\t<a href={story.url}>\n\t\t\t\t\t\t<p>{story.title}</p>\n\t\t\t\t\t</a>\n\t\t\t\t</StoryTitle>\n\t\t\t\t<h1 style={{ marginTop: \"10px\", fontStyle: \"normal\"}}><b>Comments</b></h1>\n\t\t\t\t{commentIds.slice(0, count).map((commentId) => (\n\t\t\t\t\t<Comment key={commentId} commentId={commentId} />\n\t\t\t\t))}\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}