{"ast":null,"code":"export const mapTime = timestamp => {\n  const seconds = Math.floor((new Date() - timestamp * 1000) / 1000);\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return `${interval} years`;\n  }\n\n  interval = Math.floor(seconds / 2592000);\n\n  if (interval > 1) {\n    return `${interval} months`;\n  }\n\n  interval = Math.floor(seconds / 86400);\n\n  if (interval > 1) {\n    return `${interval} days`;\n  }\n\n  interval = Math.floor(seconds / 3600);\n\n  if (interval > 1) {\n    return `${interval} hours`;\n  }\n\n  interval = Math.floor(seconds / 60);\n\n  if (interval > 1) {\n    return `${interval} minutes`;\n  }\n\n  return `${Math.floor(seconds)} seconds`;\n};\nexport const check = length => {\n  if (length) {\n    return length;\n  } else {\n    return 0;\n  }\n};","map":{"version":3,"sources":["/Users/Inna/Documents/GitHub/FE-2/hackernews/src/mappers/mapTime.js"],"names":["mapTime","timestamp","seconds","Math","floor","Date","interval","check","length"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAGC,SAAS,IAAI;AAChC,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAIC,IAAJ,KAAaJ,SAAS,GAAG,IAA1B,IAAkC,IAA7C,CAAhB;AAEA,MAAIK,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,QAArB,CAAf;;AAEA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAQ,GAAEA,QAAS,QAAnB;AACD;;AACDA,EAAAA,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,OAArB,CAAX;;AAEA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAQ,GAAEA,QAAS,SAAnB;AACD;;AACDA,EAAAA,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,KAArB,CAAX;;AAEA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAQ,GAAEA,QAAS,OAAnB;AACD;;AACDA,EAAAA,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,IAArB,CAAX;;AAEA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAQ,GAAEA,QAAS,QAAnB;AACD;;AACDA,EAAAA,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,EAArB,CAAX;;AAEA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAQ,GAAEA,QAAS,UAAnB;AACD;;AAED,SAAQ,GAAEH,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAoB,UAA9B;AACH,CA9BM;AAgCP,OAAO,MAAMK,KAAK,GAAGC,MAAM,IAAI;AAC7B,MAAIA,MAAJ,EAAW;AACT,WAAOA,MAAP;AACD,GAFD,MAGK;AACH,WAAO,CAAP;AACD;AACF,CAPM","sourcesContent":["export const mapTime = timestamp => {\n    const seconds = Math.floor((new Date() - timestamp * 1000) / 1000);\n  \n    let interval = Math.floor(seconds / 31536000);\n  \n    if (interval > 1) {\n      return `${interval} years`;\n    }\n    interval = Math.floor(seconds / 2592000);\n  \n    if (interval > 1) {\n      return `${interval} months`;\n    }\n    interval = Math.floor(seconds / 86400);\n  \n    if (interval > 1) {\n      return `${interval} days`;\n    }\n    interval = Math.floor(seconds / 3600);\n  \n    if (interval > 1) {\n      return `${interval} hours`;\n    }\n    interval = Math.floor(seconds / 60);\n  \n    if (interval > 1) {\n      return `${interval} minutes`;\n    }\n  \n    return `${Math.floor(seconds)} seconds`;\n};\n\nexport const check = length => {\n  if (length){\n    return length;\n  }\n  else {\n    return 0;\n  }\n}"]},"metadata":{},"sourceType":"module"}