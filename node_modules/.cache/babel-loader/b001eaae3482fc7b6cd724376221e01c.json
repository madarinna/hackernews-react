{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/CommentContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getCommentIds } from \"../services/hnApi\";\nimport Comment from \"../components/Comment\";\nimport { GlobalStyle, StoriesContainerWrapper } from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nimport Story from \"../components/Story\";\nimport { Content } from \"antd/lib/layout/layout\";\nexport const CommentContainer = ({\n  storyId\n}) => {\n  _s();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [commentIds, setCommentIds] = useState([]);\n  useEffect(() => {\n    getCommentIds(storyId).then(data => setCommentIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xA0\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        style: {\n          padding: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            marginTop: \"10px\",\n            fontStyle: \"normal\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this), commentIds.slice(0, count).map(commentId => /*#__PURE__*/_jsxDEV(Comment, {\n          commentId: commentId\n        }, commentId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CommentContainer, \"sK7Q6T4FD+PusOBdGzhEWZP6fd4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = CommentContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentContainer\");","map":{"version":3,"sources":["/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/CommentContainer.js"],"names":["React","useEffect","useState","getCommentIds","Comment","GlobalStyle","StoriesContainerWrapper","useInfiniteScroll","Story","Content","CommentContainer","storyId","count","commentIds","setCommentIds","then","data","padding","marginTop","fontStyle","slice","map","commentId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SACCC,WADD,EAECC,uBAFD,QAGO,kCAHP;AAIA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAYL,iBAAiB,EAAnC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,aAAa,CAACQ,OAAD,CAAb,CAAuBI,IAAvB,CAA6BC,IAAD,IAAUF,aAAa,CAACE,IAAD,CAAnD;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,4BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,uBAAD;AAAyB,sBAAa,mBAAtC;AAAA,8BACC;AAAA;AAAA,uBADD,eAEC,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEL;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAE;AAAX,SAAhB;AAAA,gCACC;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE,MAAb;AAAqBC,YAAAA,SAAS,EAAE;AAAhC,WAAX;AAAA,iCAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEN,UAAU,CAACO,KAAX,CAAiB,CAAjB,EAAoBR,KAApB,EAA2BS,GAA3B,CAAgCC,SAAD,iBAC/B,QAAC,OAAD;AAAyB,UAAA,SAAS,EAAEA;AAApC,WAAcA,SAAd;AAAA;AAAA;AAAA;AAAA,gBADA,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAeA,CAvBM;;GAAMZ,gB;UACMH,iB;;;KADNG,gB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getCommentIds } from \"../services/hnApi\";\nimport Comment from \"../components/Comment\";\nimport {\n\tGlobalStyle,\n\tStoriesContainerWrapper,\n} from \"../styles/StoriesContainerStyles\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nimport Story from \"../components/Story\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nexport const CommentContainer = ({ storyId }) => {\n\tconst { count } = useInfiniteScroll();\n\tconst [commentIds, setCommentIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetCommentIds(storyId).then((data) => setCommentIds(data));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<StoriesContainerWrapper data-test-id=\"stories-container\">\n\t\t\t\t<>&nbsp;</>\n\t\t\t\t<Story storyId={storyId}/>\n\t\t\t\t<Content style={{ padding: \"5px\" }}>\n\t\t\t\t\t<h1 style={{ marginTop: \"10px\", fontStyle: \"normal\"}}><b>Comments</b></h1>\n\t\t\t\t\t{commentIds.slice(0, count).map((commentId) => (\n\t\t\t\t\t\t<Comment key={commentId} commentId={commentId} />\n\t\t\t\t\t))}\n\t\t\t\t</Content>\n\t\t\t</StoriesContainerWrapper>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}