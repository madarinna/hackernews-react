{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getStoryIds } from '../services/hnApi';\nimport { Story } from '../components/Story';\nimport { GlobalStyle, StoriesContainerWrapper } from '../styles/StoriesContainerStyles';\nexport const StoriesContainer = () => {\n  _s();\n\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), storyIds.map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StoriesContainer, \"Q/S4cBBIAd5tDXHPzpG8WieIXSU=\");\n\n_c = StoriesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoriesContainer\");","map":{"version":3,"sources":["/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js"],"names":["React","useEffect","useState","getStoryIds","Story","GlobalStyle","StoriesContainerWrapper","StoriesContainer","storyIds","setStoryIds","then","data","map","storyId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,WAAT,EAAsBC,uBAAtB,QAAqD,kCAArD;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,GAAGO,IAAd,CAAmBC,IAAI,IAAIF,WAAW,CAACE,IAAD,CAAtC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACA;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEM,QAAC,uBAAD;AAAyB,sBAAa,mBAAtC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKH,QAAQ,CAACI,GAAT,CAAaC,OAAO,iBACjB,QAAC,KAAD;AAEI,QAAA,OAAO,EAAEA;AAFb,SACSA,OADT;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFN;AAAA,kBADA;AAcD,CArBM;;GAAMN,gB;;KAAAA,gB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getStoryIds } from '../services/hnApi';\nimport { Story } from '../components/Story';\nimport { GlobalStyle, StoriesContainerWrapper } from '../styles/StoriesContainerStyles';\n\nexport const StoriesContainer = () => {\n  const [storyIds, setStoryIds] = useState([]);\n\n  useEffect(() => {\n    getStoryIds().then(data => setStoryIds(data));\n  }, []);\n\n  return (\n  <>\n    <GlobalStyle />\n        <StoriesContainerWrapper data-test-id=\"stories-container\">\n            <h1>Hacker News Stories</h1>\n            {storyIds.map(storyId => (\n                <Story \n                    key={storyId}\n                    storyId={storyId}\n                />\n            ))}\n        </StoriesContainerWrapper>\n  </>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}