{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getStoryIds } from '../services/hnApi';\nimport { Story } from '../components/Story';\nimport { GlobalStyle, StoriesContainerWrapper } from '../styles/StoriesContainerStyles';\nimport { useInfiniteScroll } from '../hooks/useInfiniteScroll';\nexport const StoriesContainer = () => {\n  _s();\n\n  const {\n    count\n  } = useInfiniteScroll();\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), storyIds.slice(0, count).map(storyId => /*#__PURE__*/_jsxDEV(Story, {\n        storyId: storyId\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StoriesContainer, \"mPsvVcP70qRJduYi3JSdbnwsaR4=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = StoriesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoriesContainer\");","map":{"version":3,"sources":["/Users/Inna/Documents/GitHub/FE-2/hackernews/src/containers/StoriesContainer.js"],"names":["React","useEffect","useState","getStoryIds","Story","GlobalStyle","StoriesContainerWrapper","useInfiniteScroll","StoriesContainer","count","storyIds","setStoryIds","then","data","slice","map","storyId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,WAAT,EAAsBC,uBAAtB,QAAqD,kCAArD;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAYF,iBAAiB,EAAnC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,WAAW,GAAGS,IAAd,CAAmBC,IAAI,IAAIF,WAAW,CAACE,IAAD,CAAtC;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACA;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,uBAAD;AAAyB,sBAAa,mBAAtC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKH,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkBL,KAAlB,EAAyBM,GAAzB,CAA6BC,OAAO,iBACjC,QAAC,KAAD;AAEI,QAAA,OAAO,EAAEA;AAFb,SACSA,OADT;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADA;AAcH,CAtBM;;GAAMR,gB;UACSD,iB;;;KADTC,gB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getStoryIds } from '../services/hnApi';\nimport { Story } from '../components/Story';\nimport { GlobalStyle, StoriesContainerWrapper } from '../styles/StoriesContainerStyles';\nimport { useInfiniteScroll } from '../hooks/useInfiniteScroll';\n\nexport const StoriesContainer = () => {\n    const { count } = useInfiniteScroll();\n    const [storyIds, setStoryIds] = useState([]);\n\n    useEffect(() => {\n        getStoryIds().then(data => setStoryIds(data));\n    }, []);\n\n    return (\n    <>\n        <GlobalStyle />\n        <StoriesContainerWrapper data-test-id=\"stories-container\">\n            <h1>Hacker News Stories</h1>\n            {storyIds.slice(0, count).map(storyId => (\n                <Story \n                    key={storyId}\n                    storyId={storyId}\n                />\n            ))}\n        </StoriesContainerWrapper>\n    </>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}