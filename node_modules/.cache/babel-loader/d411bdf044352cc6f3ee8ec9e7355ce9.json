{"ast":null,"code":"import _slicedToArray from\"/Users/nurulputri/Documents/GitHub/FE-2/hackernews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";/* eslint-disable react-hooks/exhaustive-deps */import React,{useEffect,useState,memo}from\"react\";import{mapTime}from\"../mappers/mapTime\";import{clean}from\"../mappers/mapTime\";import{getComment}from\"../services/hnApi\";import{StoryMeta,StoryMetaElement,StoryWrapper}from\"../styles/StoryStyles\";import{HashLink as Link}from\"react-router-hash-link\";import{Content}from\"antd/lib/layout/layout\";var Comment=/*#__PURE__*/memo(function Comment(_ref){var commentId=_ref.commentId;var _useState=useState(),_useState2=_slicedToArray(_useState,2),comment=_useState2[0],setComment=_useState2[1];useEffect(function(){getComment(commentId).then(function(data){data&&data.text&&setComment(data);});},[]);return comment&&comment.text?/*#__PURE__*/_jsxs(StoryWrapper,{\"data-testid\":\"comment\",children:[/*#__PURE__*/_jsx(\"script\",{crossOrigin:true,src:\"...\"}),/*#__PURE__*/_jsx(Content,{style:{padding:\"0 50px\"},children:/*#__PURE__*/_jsxs(StoryMeta,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"span\",{\"data-testid\":\"comment-time\",children:[mapTime(comment.time),\" ago \",\" \"]}),/*#__PURE__*/_jsx(Link,{to:\"/user/\".concat(comment.by),children:/*#__PURE__*/_jsx(\"span\",{\"data-testid\":\"comment-by\",children:/*#__PURE__*/_jsxs(StoryMetaElement,{color:\"#000\",children:[\"by \",comment.by]})})})]}),/*#__PURE__*/_jsxs(\"p\",{\"data-testid\":\"comment-text\",children:[/*#__PURE__*/_jsx(StoryMetaElement,{color:\"#000\"}),\" \",clean(comment.text)]})]})})]}):/*#__PURE__*/_jsx(_Fragment,{});});export default Comment;","map":{"version":3,"sources":["/Users/nurulputri/Documents/GitHub/FE-2/hackernews/src/components/Comment.js"],"names":["React","useEffect","useState","memo","mapTime","clean","getComment","StoryMeta","StoryMetaElement","StoryWrapper","HashLink","Link","Content","Comment","commentId","comment","setComment","then","data","text","padding","time","by"],"mappings":"sTAAA,gDACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,IAArC,KAAiD,OAAjD,CACA,OAASC,OAAT,KAAwB,oBAAxB,CACA,OAASC,KAAT,KAAsB,oBAAtB,CACA,OAASC,UAAT,KAA2B,mBAA3B,CACA,OACCC,SADD,CAECC,gBAFD,CAGCC,YAHD,KAIO,uBAJP,CAKA,OAASC,QAAQ,GAAIC,CAAAA,IAArB,KAAiC,wBAAjC,CACA,OAASC,OAAT,KAAwB,wBAAxB,CAEA,GAAMC,CAAAA,OAAO,cAAGV,IAAI,CAAC,QAASU,CAAAA,OAAT,MAAgC,IAAbC,CAAAA,SAAa,MAAbA,SAAa,eACtBZ,QAAQ,EADc,wCAC7Ca,OAD6C,eACpCC,UADoC,eAGpDf,SAAS,CAAC,UAAM,CACfK,UAAU,CAACQ,SAAD,CAAV,CAAsBG,IAAtB,CAA2B,SAACC,IAAD,CAAU,CACpCA,IAAI,EAAIA,IAAI,CAACC,IAAb,EAAqBH,UAAU,CAACE,IAAD,CAA/B,CACA,CAFD,EAGA,CAJQ,CAIN,EAJM,CAAT,CAMA,MAAOH,CAAAA,OAAO,EAAIA,OAAO,CAACI,IAAnB,cACN,MAAC,YAAD,EAAc,cAAY,SAA1B,wBACC,eAAQ,WAAW,KAAnB,CAAoB,GAAG,CAAC,KAAxB,EADD,cAEC,KAAC,OAAD,EAAS,KAAK,CAAE,CAAEC,OAAO,CAAE,QAAX,CAAhB,uBACC,MAAC,SAAD,yBACC,kCACC,cAAM,cAAY,cAAlB,WACEhB,OAAO,CAACW,OAAO,CAACM,IAAT,CADT,eADD,cAIC,KAAC,IAAD,EAAM,EAAE,iBAAWN,OAAO,CAACO,EAAnB,CAAR,uBACC,aAAM,cAAY,YAAlB,uBACC,MAAC,gBAAD,EAAkB,KAAK,CAAC,MAAxB,iBACKP,OAAO,CAACO,EADb,GADD,EADD,EAJD,GADD,cAaC,WAAG,cAAY,cAAf,wBACC,KAAC,gBAAD,EAAkB,KAAK,CAAC,MAAxB,EADD,CACoD,GADpD,CAEEjB,KAAK,CAACU,OAAO,CAACI,IAAT,CAFP,GAbD,GADD,EAFD,GADM,cAyBN,kBAzBD,CA2BA,CApCmB,CAApB,CAqCA,cAAeN,CAAAA,OAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, memo } from \"react\";\nimport { mapTime } from \"../mappers/mapTime\";\nimport { clean } from \"../mappers/mapTime\";\nimport { getComment } from \"../services/hnApi\";\nimport {\n\tStoryMeta,\n\tStoryMetaElement,\n\tStoryWrapper,\n} from \"../styles/StoryStyles\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nconst Comment = memo(function Comment({ commentId }) {\n\tconst [comment, setComment] = useState();\n\n\tuseEffect(() => {\n\t\tgetComment(commentId).then((data) => {\n\t\t\tdata && data.text && setComment(data);\n\t\t});\n\t}, []);\n\n\treturn comment && comment.text ? (\n\t\t<StoryWrapper data-testid=\"comment\">\n\t\t\t<script crossOrigin src=\"...\"></script>\n\t\t\t<Content style={{ padding: \"0 50px\" }}>\n\t\t\t\t<StoryMeta>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<span data-testid=\"comment-time\">\n\t\t\t\t\t\t\t{mapTime(comment.time)} ago {` `}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<Link to={`/user/${comment.by}`}>\n\t\t\t\t\t\t\t<span data-testid=\"comment-by\">\n\t\t\t\t\t\t\t\t<StoryMetaElement color=\"#000\">\n\t\t\t\t\t\t\t\t\tby {comment.by}\n\t\t\t\t\t\t\t\t</StoryMetaElement>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p data-testid=\"comment-text\">\n\t\t\t\t\t\t<StoryMetaElement color=\"#000\"></StoryMetaElement>{\" \"}\n\t\t\t\t\t\t{clean(comment.text)}\n\t\t\t\t\t</p>\n\t\t\t\t</StoryMeta>\n\t\t\t</Content>\n\t\t</StoryWrapper>\n\t) : (\n\t\t<></>\n\t);\n});\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}